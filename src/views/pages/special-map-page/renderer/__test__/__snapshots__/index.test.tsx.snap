// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Shallow Snapshot Tests basic 1`] = `
<ForwardRef(Box)
  sx={Object {}}
>
  <GlobalMenu
    mapPage={true}
    topBarPosition="static"
  >
    <ForwardRef(Box)
      my={1}
    >
      <CenterSpinner />
    </ForwardRef(Box)>
  </GlobalMenu>
  <BoxModal
    disableClickOutside={true}
    onClose={[Function]}
    open={false}
    showCloseButton={true}
  >
    <ForwardRef(Box)
      sx={
        Object {
          "height": "90vh",
          "overflowY": "auto",
          "px": 2,
        }
      }
    >
      <SpecialMapSettingForm />
    </ForwardRef(Box)>
  </BoxModal>
  <ForwardRef(Snackbar)
    autoHideDuration={6000}
    onClose={[Function]}
    open={false}
  >
    <ForwardRef(Alert)
      onClose={[Function]}
      sx={
        Object {
          "width": "100%",
        }
      }
      variant="filled"
    />
  </ForwardRef(Snackbar)>
  <SwipeableEdgeDrawer
    bleedingHeight={56}
    edgeLabel={
      <CloseFormButton
        onClose={[Function]}
      />
    }
    edgeLabelWhenClosed="編集中"
    heightRatio={80}
    onClose={[Function]}
    onOpen={[Function]}
    open={false}
    show={false}
  >
    xxx
  </SwipeableEdgeDrawer>
</ForwardRef(Box)>
`;

exports[`Shallow Snapshot Tests focusing a marker 1`] = `
<ForwardRef(Box)
  sx={Object {}}
>
  <GlobalMenu
    mapPage={true}
    topBarPosition="static"
  >
    <CommonHelmet
      canonicalUrlPath="/special-maps/detail/1"
      description="定番から穴場まで、ディズニーのトイレマップです。"
      title="トイレマップ"
    />
    <ForwardRef(Box)
      sx={
        Object {
          "height": "calc(100px - 58px)",
          "position": "relative",
          "width": "100px",
        }
      }
    >
      <ParkMap
        initZoom={2}
        park="L"
        setMap={[Function]}
      >
        <MapMarker
          autoOpen={false}
          draggable={false}
          key="special-map--67.6875-140.75"
          mapController={
            Object {
              "map": Object {
                "flyTo": [MockFunction] {
                  "calls": Array [
                    Array [
                      Object {
                        "lat": -67.6875,
                        "lng": 140.75,
                      },
                      3,
                      Object {
                        "animate": false,
                      },
                    ],
                  ],
                  "results": Array [
                    Object {
                      "type": "return",
                      "value": undefined,
                    },
                  ],
                },
                "invalidateSize": [MockFunction],
                "on": [MockFunction],
              },
              "popup": <ForwardRef(Box)
                width={300}
              >
                <ForwardRef(Typography)
                  align="center"
                  component="div"
                  mb={2}
                >
                  <Image
                    maxHeight="200px"
                    maxWidth="full"
                    src="https://cdn-ak.f.st-hatena.com/images/fotolife/n/nats-co/20160323/20160323164220.jpg"
                  />
                </ForwardRef(Typography)>
                <DynamicAlignedText
                  component="div"
                >
                  アリスモチーフのトイレです。トランプ模様の扉がかわいい。
                </DynamicAlignedText>
              </ForwardRef(Box)>,
            }
          }
          position={
            Object {
              "lat": -67.6875,
              "lng": 140.75,
            }
          }
          variant="restroom"
          zIndexOffset={0}
        />
      </ParkMap>
      <ForwardRef(Box)
        sx={
          Object {
            "boxSizing": "border-box",
            "left": 0,
            "margin": 0,
            "position": "fixed",
            "px": 1,
            "top": 68,
            "width": "100%",
            "zIndex": 1000,
          }
        }
      >
        <ForwardRef(Box)
          sx={
            Object {
              "backgroundColor": "rgba(255, 255, 255, 0.9)",
              "borderRadius": 1,
              "boxSizing": "border-box",
              "maxWidth": "800px",
              "mb": 1,
              "mx": "auto",
              "p": 1,
            }
          }
        >
          <ForwardRef(Grid)
            container={true}
            spacing={0}
          >
            <ForwardRef(Grid)
              item={true}
              pt={0.4}
              xs={1}
            >
              <NonStyleLink
                to="/special-maps/detail/0"
              >
                <ForwardRef(IconButton)
                  color="primary"
                >
                  <Memo(ForwardRef(HelpOutlineIcon)) />
                </ForwardRef(IconButton)>
              </NonStyleLink>
            </ForwardRef(Grid)>
            <ForwardRef(Grid)
              item={true}
              xs={10}
            >
              <ForwardRef(Typography)
                align="center"
                component="h2"
                py={1}
                variant="h6"
              >
                トイレマップ
              </ForwardRef(Typography)>
            </ForwardRef(Grid)>
            <ForwardRef(Grid)
              item={true}
              xs={1}
            />
          </ForwardRef(Grid)>
        </ForwardRef(Box)>
        <ForwardRef(Box)
          textAlign="right"
        >
          <ForwardRef(Box)
            display="inline-block"
          >
            <ParkSelectBox
              onChangePark={[Function]}
              park="L"
            />
          </ForwardRef(Box)>
        </ForwardRef(Box)>
      </ForwardRef(Box)>
      <LoadingProgressBar
        fetchingState="success"
        isMobile={true}
        loadedPages={0}
      />
      <FloatingButton
        color="error"
        disabled={false}
        icon="add-marker"
        onClick={[Function]}
        size="large"
        text="新しい投稿を追加"
      />
    </ForwardRef(Box)>
  </GlobalMenu>
  <BoxModal
    disableClickOutside={true}
    onClose={[Function]}
    open={false}
    showCloseButton={true}
  >
    <ForwardRef(Box)
      sx={
        Object {
          "height": "90vh",
          "overflowY": "auto",
          "px": 2,
        }
      }
    >
      <SpecialMapSettingForm />
    </ForwardRef(Box)>
  </BoxModal>
  <ForwardRef(Snackbar)
    autoHideDuration={6000}
    onClose={[Function]}
    open={false}
  >
    <ForwardRef(Alert)
      onClose={[Function]}
      sx={
        Object {
          "width": "100%",
        }
      }
      variant="filled"
    />
  </ForwardRef(Snackbar)>
  <SwipeableEdgeDrawer
    bleedingHeight={56}
    edgeLabel={
      <CloseFormButton
        onClose={[Function]}
      />
    }
    edgeLabelWhenClosed="編集中"
    heightRatio={80}
    onClose={[Function]}
    onOpen={[Function]}
    open={false}
    show={false}
  >
    xxx
  </SwipeableEdgeDrawer>
</ForwardRef(Box)>
`;

exports[`Shallow Snapshot Tests loaded (pc) 1`] = `
<ForwardRef(Box)
  sx={Object {}}
>
  <GlobalMenu
    mapPage={true}
    topBarPosition="static"
  >
    <CommonHelmet
      canonicalUrlPath="/special-maps/detail/1"
      description="定番から穴場まで、ディズニーのトイレマップです。"
      title="トイレマップ"
    />
    <ForwardRef(Box)
      sx={
        Object {
          "height": "calc(100px - 66px)",
          "position": "relative",
          "width": "100px",
        }
      }
    >
      <ParkMap
        initZoom={2}
        park="L"
        setMap={[Function]}
      />
      <ForwardRef(Box)
        sx={
          Object {
            "boxSizing": "border-box",
            "left": 0,
            "margin": 0,
            "position": "fixed",
            "px": 1,
            "top": 76,
            "width": "100%",
            "zIndex": 1000,
          }
        }
      >
        <ForwardRef(Box)
          sx={
            Object {
              "backgroundColor": "rgba(255, 255, 255, 0.9)",
              "borderRadius": 1,
              "boxSizing": "border-box",
              "maxWidth": "800px",
              "mb": 1,
              "mx": "auto",
              "p": 1,
            }
          }
        >
          <ForwardRef(Grid)
            container={true}
            spacing={0}
          >
            <ForwardRef(Grid)
              item={true}
              pt={0.4}
              xs={1}
            >
              <NonStyleLink
                to="/special-maps/detail/0"
              >
                <ForwardRef(IconButton)
                  color="primary"
                >
                  <Memo(ForwardRef(HelpOutlineIcon)) />
                </ForwardRef(IconButton)>
              </NonStyleLink>
            </ForwardRef(Grid)>
            <ForwardRef(Grid)
              item={true}
              xs={10}
            >
              <ForwardRef(Typography)
                align="center"
                component="h2"
                py={1}
                variant="h6"
              >
                トイレマップ
              </ForwardRef(Typography)>
            </ForwardRef(Grid)>
            <ForwardRef(Grid)
              item={true}
              xs={1}
            />
          </ForwardRef(Grid)>
        </ForwardRef(Box)>
        <ForwardRef(Box)
          textAlign="right"
        >
          <ForwardRef(Box)
            display="inline-block"
          >
            <ParkSelectBox
              onChangePark={[Function]}
              park="L"
            />
          </ForwardRef(Box)>
        </ForwardRef(Box)>
      </ForwardRef(Box)>
      <LoadingProgressBar
        fetchingState="success"
        isMobile={false}
        loadedPages={0}
      />
      <FloatingButton
        color="error"
        disabled={false}
        icon="add-marker"
        onClick={[Function]}
        size="large"
        text="新しい投稿を追加"
      />
    </ForwardRef(Box)>
  </GlobalMenu>
  <BoxModal
    disableClickOutside={true}
    onClose={[Function]}
    open={false}
    showCloseButton={true}
  >
    <ForwardRef(Box)
      sx={
        Object {
          "height": "90vh",
          "overflowY": "auto",
          "px": 2,
        }
      }
    >
      <SpecialMapSettingForm />
    </ForwardRef(Box)>
  </BoxModal>
  <ForwardRef(Snackbar)
    autoHideDuration={6000}
    onClose={[Function]}
    open={false}
  >
    <ForwardRef(Alert)
      onClose={[Function]}
      sx={
        Object {
          "width": "100%",
        }
      }
      variant="filled"
    />
  </ForwardRef(Snackbar)>
  <ForwardRef(Drawer)
    anchor="right"
    open={false}
    sx={
      Object {
        "& .MuiDrawer-paper": Object {
          "width": 500,
        },
        "flexShrink": 0,
        "width": 500,
      }
    }
    variant="persistent"
  />
</ForwardRef(Box)>
`;

exports[`Shallow Snapshot Tests loaded 1`] = `
<ForwardRef(Box)
  sx={Object {}}
>
  <GlobalMenu
    mapPage={true}
    topBarPosition="static"
  >
    <CommonHelmet
      canonicalUrlPath="/special-maps/detail/1"
      description="定番から穴場まで、ディズニーのトイレマップです。"
      title="トイレマップ"
    />
    <ForwardRef(Box)
      sx={
        Object {
          "height": "calc(100px - 58px)",
          "position": "relative",
          "width": "100px",
        }
      }
    >
      <ParkMap
        initZoom={2}
        park="L"
        setMap={[Function]}
      >
        <MapMarker
          autoOpen={false}
          draggable={false}
          key="special-map--67.6875-140.75"
          mapController={
            Object {
              "map": Object {
                "flyTo": [MockFunction],
                "invalidateSize": [MockFunction],
                "on": [MockFunction],
              },
              "popup": <ForwardRef(Box)
                width={300}
              >
                <ForwardRef(Typography)
                  align="center"
                  component="div"
                  mb={2}
                >
                  <Image
                    maxHeight="200px"
                    maxWidth="full"
                    src="https://cdn-ak.f.st-hatena.com/images/fotolife/n/nats-co/20160323/20160323164220.jpg"
                  />
                </ForwardRef(Typography)>
                <DynamicAlignedText
                  component="div"
                >
                  アリスモチーフのトイレです。トランプ模様の扉がかわいい。
                </DynamicAlignedText>
              </ForwardRef(Box)>,
            }
          }
          position={
            Object {
              "lat": -67.6875,
              "lng": 140.75,
            }
          }
          variant="restroom"
          zIndexOffset={0}
        />
      </ParkMap>
      <ForwardRef(Box)
        sx={
          Object {
            "boxSizing": "border-box",
            "left": 0,
            "margin": 0,
            "position": "fixed",
            "px": 1,
            "top": 68,
            "width": "100%",
            "zIndex": 1000,
          }
        }
      >
        <ForwardRef(Box)
          sx={
            Object {
              "backgroundColor": "rgba(255, 255, 255, 0.9)",
              "borderRadius": 1,
              "boxSizing": "border-box",
              "maxWidth": "800px",
              "mb": 1,
              "mx": "auto",
              "p": 1,
            }
          }
        >
          <ForwardRef(Grid)
            container={true}
            spacing={0}
          >
            <ForwardRef(Grid)
              item={true}
              pt={0.4}
              xs={1}
            >
              <NonStyleLink
                to="/special-maps/detail/0"
              >
                <ForwardRef(IconButton)
                  color="primary"
                >
                  <Memo(ForwardRef(HelpOutlineIcon)) />
                </ForwardRef(IconButton)>
              </NonStyleLink>
            </ForwardRef(Grid)>
            <ForwardRef(Grid)
              item={true}
              xs={10}
            >
              <ForwardRef(Typography)
                align="center"
                component="h2"
                py={1}
                variant="h6"
              >
                トイレマップ
              </ForwardRef(Typography)>
            </ForwardRef(Grid)>
            <ForwardRef(Grid)
              item={true}
              xs={1}
            />
          </ForwardRef(Grid)>
        </ForwardRef(Box)>
        <ForwardRef(Box)
          textAlign="right"
        >
          <ForwardRef(Box)
            display="inline-block"
          >
            <ParkSelectBox
              onChangePark={[Function]}
              park="L"
            />
          </ForwardRef(Box)>
        </ForwardRef(Box)>
      </ForwardRef(Box)>
      <LoadingProgressBar
        fetchingState="success"
        isMobile={true}
        loadedPages={0}
      />
      <FloatingButton
        color="error"
        disabled={false}
        icon="add-marker"
        onClick={[Function]}
        size="large"
        text="新しい投稿を追加"
      />
    </ForwardRef(Box)>
  </GlobalMenu>
  <BoxModal
    disableClickOutside={true}
    onClose={[Function]}
    open={false}
    showCloseButton={true}
  >
    <ForwardRef(Box)
      sx={
        Object {
          "height": "90vh",
          "overflowY": "auto",
          "px": 2,
        }
      }
    >
      <SpecialMapSettingForm />
    </ForwardRef(Box)>
  </BoxModal>
  <ForwardRef(Snackbar)
    autoHideDuration={6000}
    onClose={[Function]}
    open={false}
  >
    <ForwardRef(Alert)
      onClose={[Function]}
      sx={
        Object {
          "width": "100%",
        }
      }
      variant="filled"
    />
  </ForwardRef(Snackbar)>
  <SwipeableEdgeDrawer
    bleedingHeight={56}
    edgeLabel={
      <CloseFormButton
        onClose={[Function]}
      />
    }
    edgeLabelWhenClosed="編集中"
    heightRatio={80}
    onClose={[Function]}
    onOpen={[Function]}
    open={false}
    show={false}
  >
    xxx
  </SwipeableEdgeDrawer>
</ForwardRef(Box)>
`;

exports[`Shallow Snapshot Tests loading markers 1`] = `
<ForwardRef(Box)
  sx={Object {}}
>
  <GlobalMenu
    mapPage={true}
    topBarPosition="static"
  >
    <CommonHelmet
      canonicalUrlPath="/special-maps/detail/1"
      description="定番から穴場まで、ディズニーのトイレマップです。"
      title="トイレマップ"
    />
    <ForwardRef(Box)
      sx={
        Object {
          "height": "calc(100px - 58px)",
          "position": "relative",
          "width": "100px",
        }
      }
    >
      <ParkMap
        initZoom={2}
        park="L"
        setMap={[Function]}
      />
      <ForwardRef(Box)
        sx={
          Object {
            "boxSizing": "border-box",
            "left": 0,
            "margin": 0,
            "position": "fixed",
            "px": 1,
            "top": 68,
            "width": "100%",
            "zIndex": 1000,
          }
        }
      >
        <ForwardRef(Box)
          sx={
            Object {
              "backgroundColor": "rgba(255, 255, 255, 0.9)",
              "borderRadius": 1,
              "boxSizing": "border-box",
              "maxWidth": "800px",
              "mb": 1,
              "mx": "auto",
              "p": 1,
            }
          }
        >
          <ForwardRef(Grid)
            container={true}
            spacing={0}
          >
            <ForwardRef(Grid)
              item={true}
              pt={0.4}
              xs={1}
            >
              <NonStyleLink
                to="/special-maps/detail/0"
              >
                <ForwardRef(IconButton)
                  color="primary"
                >
                  <Memo(ForwardRef(HelpOutlineIcon)) />
                </ForwardRef(IconButton)>
              </NonStyleLink>
            </ForwardRef(Grid)>
            <ForwardRef(Grid)
              item={true}
              xs={10}
            >
              <ForwardRef(Typography)
                align="center"
                component="h2"
                py={1}
                variant="h6"
              >
                トイレマップ
              </ForwardRef(Typography)>
            </ForwardRef(Grid)>
            <ForwardRef(Grid)
              item={true}
              xs={1}
            />
          </ForwardRef(Grid)>
        </ForwardRef(Box)>
        <ForwardRef(Box)
          textAlign="right"
        >
          <ForwardRef(Box)
            display="inline-block"
          >
            <ParkSelectBox
              onChangePark={[Function]}
              park="L"
            />
          </ForwardRef(Box)>
        </ForwardRef(Box)>
      </ForwardRef(Box)>
      <LoadingProgressBar
        fetchingState="loading"
        isMobile={true}
        loadedPages={0}
      />
      <FloatingButton
        color="error"
        disabled={false}
        icon="add-marker"
        onClick={[Function]}
        size="large"
        text="新しい投稿を追加"
      />
    </ForwardRef(Box)>
  </GlobalMenu>
  <BoxModal
    disableClickOutside={true}
    onClose={[Function]}
    open={false}
    showCloseButton={true}
  >
    <ForwardRef(Box)
      sx={
        Object {
          "height": "90vh",
          "overflowY": "auto",
          "px": 2,
        }
      }
    >
      <SpecialMapSettingForm />
    </ForwardRef(Box)>
  </BoxModal>
  <ForwardRef(Snackbar)
    autoHideDuration={6000}
    onClose={[Function]}
    open={false}
  >
    <ForwardRef(Alert)
      onClose={[Function]}
      sx={
        Object {
          "width": "100%",
        }
      }
      variant="filled"
    />
  </ForwardRef(Snackbar)>
  <SwipeableEdgeDrawer
    bleedingHeight={56}
    edgeLabel={
      <CloseFormButton
        onClose={[Function]}
      />
    }
    edgeLabelWhenClosed="編集中"
    heightRatio={80}
    onClose={[Function]}
    onOpen={[Function]}
    open={false}
    show={false}
  >
    xxx
  </SwipeableEdgeDrawer>
</ForwardRef(Box)>
`;

exports[`Shallow Snapshot Tests without height 1`] = `
<ForwardRef(Box)
  sx={Object {}}
>
  <GlobalMenu
    mapPage={true}
    topBarPosition="static"
  >
    <ForwardRef(Box)
      my={1}
    >
      <CenterSpinner />
    </ForwardRef(Box)>
  </GlobalMenu>
  <BoxModal
    disableClickOutside={true}
    onClose={[Function]}
    open={false}
    showCloseButton={true}
  >
    <ForwardRef(Box)
      sx={
        Object {
          "height": "90vh",
          "overflowY": "auto",
          "px": 2,
        }
      }
    >
      <SpecialMapSettingForm />
    </ForwardRef(Box)>
  </BoxModal>
  <ForwardRef(Snackbar)
    autoHideDuration={6000}
    onClose={[Function]}
    open={false}
  >
    <ForwardRef(Alert)
      onClose={[Function]}
      sx={
        Object {
          "width": "100%",
        }
      }
      variant="filled"
    />
  </ForwardRef(Snackbar)>
  <SwipeableEdgeDrawer
    bleedingHeight={56}
    edgeLabel={
      <CloseFormButton
        onClose={[Function]}
      />
    }
    edgeLabelWhenClosed="編集中"
    heightRatio={80}
    onClose={[Function]}
    onOpen={[Function]}
    open={false}
    show={false}
  >
    xxx
  </SwipeableEdgeDrawer>
</ForwardRef(Box)>
`;
