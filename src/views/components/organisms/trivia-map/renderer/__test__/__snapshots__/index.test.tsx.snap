// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Shallow Snapshot Tests basic 1`] = `
<Fragment>
  <ParkMap
    initCenter={
      Object {
        "lat": -127.5,
        "lng": 127.5,
      }
    }
    initZoom={1}
    park="S"
    positionSelectProps={
      Object {
        "active": false,
        "onCancel": [Function],
        "onConfirm": [Function],
      }
    }
    setMap={[Function]}
  >
    <PostMarkers
      editting={false}
      hiddenMarkerIds={Array []}
      isMobile={false}
      map={
        Object {
          "setView": [MockFunction],
        }
      }
      markers={
        Array [
          Object {
            "lat": 0,
            "lng": 0,
            "markerId": 100,
            "numberOfPublicArticles": Object {
              "eachCategory": Array [
                1,
                2,
                1,
              ],
              "total": 4,
            },
            "park": "S",
          },
        ]
      }
      openFormWithTheMarker={[Function]}
      popupDisabled={false}
      showNumberOfArticles={true}
    />
    <MapMarker
      autoOpen={false}
      draggable={false}
      isMobile={false}
      key="additional-marker-0"
      mapController={
        Object {
          "map": Object {
            "setView": [MockFunction],
          },
        }
      }
      position={
        Object {
          "lat": 1,
          "lng": 1,
        }
      }
      variant="red"
      zIndexOffset={0}
    />
  </ParkMap>
</Fragment>
`;

exports[`Shallow Snapshot Tests disabled map 1`] = `
<Fragment>
  <ParkMap
    disabled={true}
    initCenter={
      Object {
        "lat": -127.5,
        "lng": 127.5,
      }
    }
    initZoom={1}
    park="S"
    positionSelectProps={
      Object {
        "active": false,
        "onCancel": [Function],
        "onConfirm": [Function],
      }
    }
    setMap={[Function]}
  >
    <MapMarker
      autoOpen={false}
      draggable={false}
      isMobile={false}
      key="additional-marker-0"
      mapController={
        Object {
          "map": Object {
            "setView": [MockFunction],
          },
        }
      }
      position={
        Object {
          "lat": 1,
          "lng": 1,
        }
      }
      variant="red"
      zIndexOffset={0}
    />
  </ParkMap>
</Fragment>
`;

exports[`Shallow Snapshot Tests land map 1`] = `
<Fragment>
  <ParkMap
    initCenter={
      Object {
        "lat": -127.5,
        "lng": 127.5,
      }
    }
    initZoom={1}
    park="L"
    positionSelectProps={
      Object {
        "active": false,
        "onCancel": [Function],
        "onConfirm": [Function],
      }
    }
    setMap={[Function]}
  >
    <PostMarkers
      editting={false}
      hiddenMarkerIds={Array []}
      isMobile={false}
      map={
        Object {
          "setView": [MockFunction],
        }
      }
      markers={
        Array [
          Object {
            "lat": 0,
            "lng": 0,
            "markerId": 100,
            "numberOfPublicArticles": Object {
              "eachCategory": Array [
                1,
                2,
                1,
              ],
              "total": 4,
            },
            "park": "S",
          },
        ]
      }
      openFormWithTheMarker={[Function]}
      popupDisabled={false}
      showNumberOfArticles={true}
    />
    <MapMarker
      autoOpen={false}
      draggable={false}
      isMobile={false}
      key="additional-marker-0"
      mapController={
        Object {
          "map": Object {
            "setView": [MockFunction],
          },
        }
      }
      position={
        Object {
          "lat": 1,
          "lng": 1,
        }
      }
      variant="red"
      zIndexOffset={0}
    />
  </ParkMap>
</Fragment>
`;

exports[`Shallow Snapshot Tests with current marker 1`] = `
<Fragment>
  <ParkMap
    initCenter={
      Object {
        "lat": -127.5,
        "lng": 127.5,
      }
    }
    initZoom={1}
    park="S"
    positionSelectProps={
      Object {
        "active": false,
        "onCancel": [Function],
        "onConfirm": [Function],
      }
    }
    setMap={[Function]}
  >
    <PostMarkers
      editting={false}
      hiddenMarkerIds={Array []}
      isMobile={false}
      map={
        Object {
          "setView": [MockFunction],
        }
      }
      markers={
        Array [
          Object {
            "lat": 0,
            "lng": 0,
            "markerId": 100,
            "numberOfPublicArticles": Object {
              "eachCategory": Array [
                1,
                2,
                1,
              ],
              "total": 4,
            },
            "park": "S",
          },
        ]
      }
      openFormWithTheMarker={[Function]}
      popupDisabled={false}
      showNumberOfArticles={true}
    />
    <MapMarker
      autoOpen={false}
      draggable={false}
      isMobile={false}
      key="additional-marker-0"
      mapController={
        Object {
          "map": Object {
            "setView": [MockFunction],
          },
        }
      }
      position={
        Object {
          "lat": 1,
          "lng": 1,
        }
      }
      variant="red"
      zIndexOffset={0}
    />
    <MapMarker
      autoOpen={false}
      draggable={false}
      isMobile={false}
      mapController={
        Object {
          "map": Object {
            "setView": [MockFunction],
          },
        }
      }
      position={
        Object {
          "lat": 0,
          "lng": 0,
        }
      }
      variant="blue"
      zIndexOffset={999}
    />
  </ParkMap>
</Fragment>
`;

exports[`Shallow Snapshot Tests with initCenter prop 1`] = `
<Fragment>
  <ParkMap
    initCenter={
      Object {
        "lat": 1,
        "lng": 1,
      }
    }
    initZoom={1}
    park="S"
    positionSelectProps={
      Object {
        "active": false,
        "onCancel": [Function],
        "onConfirm": [Function],
      }
    }
    setMap={[Function]}
  >
    <PostMarkers
      editting={false}
      hiddenMarkerIds={Array []}
      isMobile={false}
      map={
        Object {
          "setView": [MockFunction],
        }
      }
      markers={
        Array [
          Object {
            "lat": 0,
            "lng": 0,
            "markerId": 100,
            "numberOfPublicArticles": Object {
              "eachCategory": Array [
                1,
                2,
                1,
              ],
              "total": 4,
            },
            "park": "S",
          },
        ]
      }
      openFormWithTheMarker={[Function]}
      popupDisabled={false}
      showNumberOfArticles={true}
    />
    <MapMarker
      autoOpen={false}
      draggable={false}
      isMobile={false}
      key="additional-marker-0"
      mapController={
        Object {
          "map": Object {
            "setView": [MockFunction],
          },
        }
      }
      position={
        Object {
          "lat": 1,
          "lng": 1,
        }
      }
      variant="red"
      zIndexOffset={0}
    />
  </ParkMap>
</Fragment>
`;

exports[`Shallow Snapshot Tests with width and height props 1`] = `
<Fragment>
  <ParkMap
    height={100}
    initCenter={
      Object {
        "lat": -127.5,
        "lng": 127.5,
      }
    }
    initZoom={1}
    park="S"
    positionSelectProps={
      Object {
        "active": false,
        "onCancel": [Function],
        "onConfirm": [Function],
      }
    }
    setMap={[Function]}
    width={100}
  >
    <PostMarkers
      editting={false}
      hiddenMarkerIds={Array []}
      isMobile={false}
      map={
        Object {
          "setView": [MockFunction],
        }
      }
      markers={
        Array [
          Object {
            "lat": 0,
            "lng": 0,
            "markerId": 100,
            "numberOfPublicArticles": Object {
              "eachCategory": Array [
                1,
                2,
                1,
              ],
              "total": 4,
            },
            "park": "S",
          },
        ]
      }
      openFormWithTheMarker={[Function]}
      popupDisabled={false}
      showNumberOfArticles={true}
    />
    <MapMarker
      autoOpen={false}
      draggable={false}
      isMobile={false}
      key="additional-marker-0"
      mapController={
        Object {
          "map": Object {
            "setView": [MockFunction],
          },
        }
      }
      position={
        Object {
          "lat": 1,
          "lng": 1,
        }
      }
      variant="red"
      zIndexOffset={0}
    />
  </ParkMap>
</Fragment>
`;
