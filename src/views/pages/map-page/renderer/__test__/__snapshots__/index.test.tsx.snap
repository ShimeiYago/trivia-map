// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Shallow Snapshot Tests basic 1`] = `
<ForwardRef(Box)
  sx={Object {}}
>
  <GlobalMenu
    topBarPosition="static"
  >
    <ForwardRef(Box)
      sx={
        Object {
          "height": "calc(100vh - 58px)",
          "position": "relative",
        }
      }
    >
      <TriviaMap
        endToSelectPosition={[Function]}
        hiddenMarkerIds={Array []}
        newMarkerMode={false}
        park="S"
        shouldCurrentPositionAsyncWithForm={true}
      />
      <FloatingButton
        color="primary"
        disabled={false}
        icon="add-marker"
        onClick={[Function]}
      />
      <LoadingProgressBar />
      <ForwardRef(Box)
        sx={
          Object {
            "backgroundColor": "white",
            "borderColor": "#9e9e9e",
            "borderRadius": 2,
            "borderStyle": "solid",
            "bottom": "auto",
            "left": "auto",
            "margin": 0,
            "padding": 1,
            "position": "fixed",
            "right": 20,
            "top": 70,
            "zIndex": 1000,
          }
        }
      >
        <ForwardRef(FormControl)
          component="fieldset"
        >
          <ForwardRef(RadioGroup)
            onChange={[Function]}
            value="S"
          >
            <ForwardRef(FormControlLabel)
              control={<ForwardRef(Radio) />}
              label="ランド"
              value="L"
            />
            <ForwardRef(FormControlLabel)
              control={<ForwardRef(Radio) />}
              label="シー"
              value="S"
            />
          </ForwardRef(RadioGroup)>
        </ForwardRef(FormControl)>
      </ForwardRef(Box)>
    </ForwardRef(Box)>
  </GlobalMenu>
  <SwipeableEdgeDrawer
    bleedingHeight={56}
    edgeLabel={
      <CloseFormButton
        onClose={[Function]}
      />
    }
    edgeLabelWhenClosed="編集中"
    heightRatio={80}
    onClose={[Function]}
    onOpen={[Function]}
    open={false}
    show={false}
  >
    <ArticleForm
      onClickSelectPosition={[Function]}
      park="S"
    />
  </SwipeableEdgeDrawer>
  <GlobalMessage
    closeFormModal={[Function]}
  />
  <ForwardRef(Dialog)
    onClose={[Function]}
    open={false}
  >
    <ForwardRef(DialogTitle)>
      入力内容の変更が保存されていません。
    </ForwardRef(DialogTitle)>
    <ForwardRef(DialogContent)>
      <ForwardRef(DialogContentText)>
        現在編集中の投稿を「下書き保存」、「保存して公開」、または「編集を破棄」してからもう一度お試しください。
      </ForwardRef(DialogContentText)>
    </ForwardRef(DialogContent)>
    <ForwardRef(DialogActions)>
      <ForwardRef(Button)
        onClick={[Function]}
        variant="outlined"
      >
        閉じる
      </ForwardRef(Button)>
    </ForwardRef(DialogActions)>
  </ForwardRef(Dialog)>
</ForwardRef(Box)>
`;

exports[`Shallow Snapshot Tests pc view 1`] = `
<ForwardRef(Box)
  sx={
    Object {
      "width": "calc(100% - 500px)",
    }
  }
>
  <GlobalMenu
    topBarPosition="static"
  >
    <ForwardRef(Box)
      sx={
        Object {
          "height": "calc(100vh - 66px)",
          "position": "relative",
        }
      }
    >
      <TriviaMap
        endToSelectPosition={[Function]}
        hiddenMarkerIds={Array []}
        newMarkerMode={false}
        park="S"
        shouldCurrentPositionAsyncWithForm={true}
      />
      <FloatingButton
        color="primary"
        disabled={false}
        icon="add-marker"
        onClick={[Function]}
      />
      <LoadingProgressBar />
      <ForwardRef(Box)
        sx={
          Object {
            "backgroundColor": "white",
            "borderColor": "#9e9e9e",
            "borderRadius": 2,
            "borderStyle": "solid",
            "bottom": "auto",
            "left": "auto",
            "margin": 0,
            "padding": 1,
            "position": "fixed",
            "right": 520,
            "top": 70,
            "zIndex": 1000,
          }
        }
      >
        <ForwardRef(FormControl)
          component="fieldset"
        >
          <ForwardRef(RadioGroup)
            onChange={[Function]}
            value="S"
          >
            <ForwardRef(FormControlLabel)
              control={<ForwardRef(Radio) />}
              label="ランド"
              value="L"
            />
            <ForwardRef(FormControlLabel)
              control={<ForwardRef(Radio) />}
              label="シー"
              value="S"
            />
          </ForwardRef(RadioGroup)>
        </ForwardRef(FormControl)>
      </ForwardRef(Box)>
    </ForwardRef(Box)>
  </GlobalMenu>
  <ForwardRef(Drawer)
    anchor="right"
    open={true}
    sx={
      Object {
        "& .MuiDrawer-paper": Object {
          "width": 500,
        },
        "flexShrink": 0,
        "width": 500,
      }
    }
    variant="persistent"
  >
    <ArticleForm
      onClickSelectPosition={[Function]}
      onClose={[Function]}
      park="S"
    />
  </ForwardRef(Drawer)>
  <GlobalMessage
    closeFormModal={[Function]}
  />
  <ForwardRef(Dialog)
    onClose={[Function]}
    open={false}
  >
    <ForwardRef(DialogTitle)>
      入力内容の変更が保存されていません。
    </ForwardRef(DialogTitle)>
    <ForwardRef(DialogContent)>
      <ForwardRef(DialogContentText)>
        現在編集中の投稿を「下書き保存」、「保存して公開」、または「編集を破棄」してからもう一度お試しください。
      </ForwardRef(DialogContentText)>
    </ForwardRef(DialogContent)>
    <ForwardRef(DialogActions)>
      <ForwardRef(Button)
        onClick={[Function]}
        variant="outlined"
      >
        閉じる
      </ForwardRef(Button)>
    </ForwardRef(DialogActions)>
  </ForwardRef(Dialog)>
</ForwardRef(Box)>
`;
