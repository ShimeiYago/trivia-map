// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Shallow Snapshot Tests basic 1`] = `
<ForwardRef(Box)>
  <ForwardRef(Stack)
    spacing={1}
    sx={
      Object {
        "maxWidth": "400px",
        "mx": "auto",
        "px": 1,
        "py": 2,
      }
    }
  >
    <ForwardRef(Typography)
      align="center"
      component="h1"
      variant="h5"
    >
      パスワード再設定
    </ForwardRef(Typography)>
    <ForwardRef(Box)
      component="form"
      noValidate={true}
    >
      <ForwardRef(TextField)
        autoComplete="current-password"
        disabled={false}
        error={false}
        fullWidth={true}
        id="password1"
        label="パスワード"
        margin="normal"
        name="password1"
        onChange={[Function]}
        type="password"
      />
      <ForwardRef(TextField)
        autoComplete="current-password"
        disabled={false}
        error={false}
        fullWidth={true}
        id="password2"
        label="パスワード（確認）"
        margin="normal"
        name="password2"
        onChange={[Function]}
        type="password"
      />
      <ForwardRef(LoadingButton)
        disabled={false}
        fullWidth={true}
        loading={false}
        onClick={[Function]}
        sx={
          Object {
            "mb": 2,
            "mt": 3,
          }
        }
        variant="contained"
      >
        再設定する
      </ForwardRef(LoadingButton)>
    </ForwardRef(Box)>
  </ForwardRef(Stack)>
</ForwardRef(Box)>
`;

exports[`Shallow Snapshot Tests error case 1`] = `
<ForwardRef(Box)>
  <ForwardRef(Stack)
    spacing={1}
    sx={
      Object {
        "maxWidth": "400px",
        "mx": "auto",
        "px": 1,
        "py": 2,
      }
    }
  >
    <ForwardRef(Typography)
      align="center"
      component="h1"
      variant="h5"
    >
      パスワード再設定
    </ForwardRef(Typography)>
    <ForwardRef(Box)>
      <HeaderErrorMessages
        errorMessages={
          Array [
            "error1",
            "error2",
          ]
        }
        errorTitle="error title"
      />
    </ForwardRef(Box)>
    <ForwardRef(Box)
      component="form"
      noValidate={true}
    >
      <ForwardRef(TextField)
        autoComplete="current-password"
        disabled={false}
        error={true}
        fullWidth={true}
        helperText={
          Array [
            "password is invalid",
          ]
        }
        id="password1"
        label="パスワード"
        margin="normal"
        name="password1"
        onChange={[Function]}
        type="password"
      />
      <ForwardRef(TextField)
        autoComplete="current-password"
        disabled={false}
        error={true}
        fullWidth={true}
        helperText={
          Array [
            "password is invalid",
          ]
        }
        id="password2"
        label="パスワード（確認）"
        margin="normal"
        name="password2"
        onChange={[Function]}
        type="password"
      />
      <ForwardRef(LoadingButton)
        disabled={false}
        fullWidth={true}
        loading={false}
        onClick={[Function]}
        sx={
          Object {
            "mb": 2,
            "mt": 3,
          }
        }
        variant="contained"
      >
        再設定する
      </ForwardRef(LoadingButton)>
    </ForwardRef(Box)>
  </ForwardRef(Stack)>
</ForwardRef(Box)>
`;

exports[`Shallow Snapshot Tests success case 1`] = `
<ForwardRef(Box)>
  <ForwardRef(Stack)
    spacing={1}
    sx={
      Object {
        "maxWidth": "400px",
        "mx": "auto",
        "px": 1,
        "py": 2,
      }
    }
  >
    <ForwardRef(Typography)
      align="center"
      component="h1"
      variant="h5"
    >
      パスワード再設定
    </ForwardRef(Typography)>
    <ForwardRef(Alert)>
      パスワードが設定されました。
    </ForwardRef(Alert)>
    <ForwardRef(Box)
      component="form"
      noValidate={true}
    >
      <ForwardRef(TextField)
        autoComplete="current-password"
        disabled={true}
        error={false}
        fullWidth={true}
        id="password1"
        label="パスワード"
        margin="normal"
        name="password1"
        onChange={[Function]}
        type="password"
      />
      <ForwardRef(TextField)
        autoComplete="current-password"
        disabled={true}
        error={false}
        fullWidth={true}
        id="password2"
        label="パスワード（確認）"
        margin="normal"
        name="password2"
        onChange={[Function]}
        type="password"
      />
      <ForwardRef(LoadingButton)
        disabled={true}
        fullWidth={true}
        loading={false}
        onClick={[Function]}
        sx={
          Object {
            "mb": 2,
            "mt": 3,
          }
        }
        variant="contained"
      >
        再設定する
      </ForwardRef(LoadingButton)>
    </ForwardRef(Box)>
  </ForwardRef(Stack)>
</ForwardRef(Box)>
`;
